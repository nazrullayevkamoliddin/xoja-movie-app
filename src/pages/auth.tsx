import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { TextField } from "src/components";
import { Formik, Form } from "formik";
import * as Yup from "yup";
import { useAuth } from "src/hooks/useAuth";
import { GetServerSideProps } from "next";

const Auth = () => {
  const [sign, setSign] = useState<"signup" | "signin">("signin");
  const { error, isLoading, signUp, signIn, user, setIsLoading } = useAuth();

  const toogleAuth = (state: "signup" | "signin") => {
    setSign(state);
  };

  const onSubmit = async (formData: { email: string; password: string }) => {
    if (sign === "signup") {
      signUp(formData.email, formData.password);
    } else {
      signIn(formData.email, formData.password);
    }
    console.log(formData);
  };

  const validation = Yup.object({
    email: Yup.string()
      .email("Enter valid email")
      .required("Email is required"),
    password: Yup.string()
      .min(6, "6 minimum character")
      .required("Password is required"),
  });

  return (
    <div className="relative flex h-screen w-screen flex-col md:items-center md:justify-center bg-black md:bg-transparent">
      <Head>
        <title>Auth - Xoja App </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.svg" />
      </Head>

      <Image
        src={"http://surl.li/fhqqh"}
        alt={"back image"}
        fill
        className="object-cover -z-10 !hidden sm:!inline opacity-5"
      />

      <Image
        src={"/logo.svg"}
        alt={"logo"}
        width={70}
        height={70}
        className={"absolute top-4 left-4 cursor-pointer object-contain"}
      />

      <Formik
        initialValues={{ email: "", password: "" }}
        onSubmit={onSubmit}
        validationSchema={validation}
      >
        <Form className="relative mt-24 space-y-8 rounded bg-black/75 py-10 px-6 md:mt-0 md:max-w-md md:px-14 ">
          <h1 className="text-4xl font-semibold">
            {" "}
            {sign === "signup" ? "Sign Up" : "Sign In"}{" "}
          </h1>
          {error && (
            <div className="text-red-500 font-semibold text-center">
              {error}
            </div>
          )}
          <div className="space-y-4">
            <TextField name="email" placeholder="Email" type={"text"} />
            <TextField
              name="password"
              placeholder="Password"
              type={"password"}
            />
          </div>
          <button
            type="submit"
            disabled={isLoading}
            className="w-full bg-[#e10856] py-3  mt-4 font-semibold"
          >
            {isLoading
              ? "Loading..."
              : sign === "signin"
              ? "Sign In"
              : "Sing Up"}
          </button>

          {sign === "signin" ? (
            <div className="text-[gray]">
              Not yet account?{" "}
              <button
                type="button"
                className="text-white hover:underline"
                onClick={() => toogleAuth("signup")}
              >
                {" "}
                Sign Up Now{" "}
              </button>
            </div>
          ) : (
            <div className="text-[gray]">
              Already have account?{" "}
              <button
                type="button"
                className="text-white hover:underline"
                onClick={() => toogleAuth("signin")}
              >
                {" "}
                Sign in{" "}
              </button>
            </div>
          )}
        </Form>
      </Formik>
    </div>
  );
};

export default Auth;

export const getServerSideProps: GetServerSideProps = async ({ req }) => {
  const user_id = req.cookies.user_id;

  if (!user_id) {
    return {
      redirect: { destination: "/auth", permanent: false },
    };
  }

  return {
    props: {},
  };
};
